if: 'tag IS blank'
env:
    global:
        - TRAVIS_TAG=v2021.8.24
jobs:
    include:
        -
            name: 'Python 3.7.5 on Linux (AMD64)'
            os: linux
            dist: bionic
            arch: amd64
            language: python
            python: 3.7.5
            env: ['PATH=~/.ruby/bin:$PATH', GEM_HOME=~/.ruby, RELEASE_FILENAME=CDNDrive-$TRAVIS_TAG-linux-amd64.tar.gz]
        -
            name: 'Python 3.7.5 on Linux (ARM64)'
            os: linux
            dist: bionic
            arch: arm64
            language: python
            python: 3.7.5
            env: ['PATH=~/.ruby/bin:$PATH', GEM_HOME=~/.ruby, RELEASE_FILENAME=CDNDrive-$TRAVIS_TAG-linux-arm64.tar.gz]
        -
            name: 'Python 3.7.4 on macOS (AMD64)'
            os: osx
            osx_image: xcode11.2
            arch: amd64
            language: shell
            env: RELEASE_FILENAME=CDNDrive-$TRAVIS_TAG-macos-amd64.zip
        -
            name: 'Python 3.7.5 x86-64 on Windows (AMD64)'
            os: windows
            arch: amd64
            language: shell
            env: ['PATH=/c/Python37:/c/Python37/Scripts:$PATH', RELEASE_FILENAME=CDNDrive-$TRAVIS_TAG-windows-x86-64.zip]
            before_install: 'choco install python --version 3.7.5'
        -
            name: 'Python 3.7.5 x86 on Windows (AMD64)'
            os: windows
            arch: amd64
            language: shell
            env: ['PATH=/c/Python37:/c/Python37/Scripts:$PATH', RELEASE_FILENAME=CDNDrive-$TRAVIS_TAG-windows-x86.zip]
            before_install: 
                - 'curl https://www.python.org/ftp/python/3.7.5/python-3.7.5.exe --output python37x86.exe'
                - './python37x86.exe /quiet InstallAllUsers=1 PrependPath=1 Include_test=0 AssociateFiles=0 Shortcuts=0 InstallLauncherAllUsers=1 TargetDir=C:\Python37'
install:
    - 'if [ "$TRAVIS_OS_NAME" = "windows" ]; then python -m pip install -U pip; else pip3 install -U pip; fi'
    - 'pip3 install -r requirements.txt'
    - 'pip3 install pyinstaller'
    - 'pip3 install cdndrive' # complie executbale file
script:
    - 'if [ "$TRAVIS_OS_NAME" = "windows" ]; then python -m CDNDrive -v; else python3 -m CDNDrive -v; fi'
    - 'pyinstaller -F -n CDNDrive -i icon.ico CDNDrive/__main__.py'
    - 'mkdir -p release/CDNDrive'
    - 'cp {dist/*,LICENSE,README.md} release/CDNDrive'
    - 'cd release'
    - 'if [ "$TRAVIS_OS_NAME" = "windows" ]; then 7z a -tzip $RELEASE_FILENAME CDNDrive; elif [ "$TRAVIS_OS_NAME" = "osx" ]; then zip -r $RELEASE_FILENAME CDNDrive; else tar -czvf $RELEASE_FILENAME CDNDrive; fi'
    - 'cd ..'
deploy:
    -
        provider: releases
        api_key: $GITHUB_OAUTH_TOKEN
        file: release/$RELEASE_FILENAME
        overwrite: true
        skip_cleanup: true
    -
        provider: pypi
        user: __token__
        password: $PYPI_API_TOKEN
        distributions: 'sdist bdist_wheel'
        skip_existing: true
        on:
            condition: ['$TRAVIS_OS_NAME = linux', '$TRAVIS_CPU_ARCH = amd64']
